const translations = {
    zh: {
        startingBrowser: '正在启动浏览器...',
        browserInitialized: '浏览器初始化完成',
        databaseOpened: '数据库已打开',
        loggingIn: '正在登录小红书...',
        loginSuccessful: '登录成功',
        gettingProfileUrl: '正在获取个人主页 URL...',
        navigatingToProfile: '正在导航到个人主页：{url}',
        profileUrlNotFound: '未找到个人主页 URL',
        personalInfoReplaced: '个人信息已被替换为星号',
        attemptingTabClick: '正在尝试点击"{tab}"标签（第 {attempt} 次尝试）',
        pageLoaded: '页面已加载完成',
        tabsFound: '找到标签列表',
        tabFound: '找到"{tab}"标签，位于第 {index} 个位置',
        tabSwitched: '已切换到"{tab}"标签',
        vidExtracted: '提取的视频 ID：{vid}',
        videoExists: '视频 {vid} 已存在于数据库中',
        videoMp4NotFound: '未找到视频 {vid} 的 MP4 源',
        videoAddedToDatabase: '视频 {vid} 已添加到数据库',
        processVideoPageError: '处理视频页面时出错：{error}',
        startingVideoDownload: '开始下载视频：{url}，保存路径：{savePath}',
        videoDownloadComplete: '视频下载完成，保存路径：{savePath}',
        videoDownloadError: '视频下载出错：{error}',
        startingImageDownload: '开始下载图片：{url}，保存路径：{savePath}',
        imageDownloadComplete: '图片下载完成，保存路径：{savePath}',
        imageDownloadError: '图片下载出错：{error}',
        startingDownloader: '开始下载器...',
        processingVideos: '正在处理{type}视频...',
        allContentProcessed: '所有内容处理完成',
        waitingForUserInput: '等待用户输入以保持浏览器开启...',
        loginTimeout: '登录超时',
        loginFailed: '登录失败',
        downloaderError: '下载器出错：{error}',
        closingBrowser: '正在关闭浏览器...',
        downloaderFinished: '下载器已完成',
        databaseCloseError: '关闭数据库连接时出错：{error}',
        databaseConnectionClosed: '数据库连接已关闭',
        cookiesSaved: 'Cookies 已保存',
        cookiesLoaded: 'Cookies 已加载',
        cookiesFileNotFound: 'Cookies 文件不存在，将在首次登录后创建',
        saveVideoDataError: '保存视频数据到数据库时出错：{error}',
        gettingVideos: '在获取{type}视频...',
        startingPreScroll: '开始预滚动，共 {attempts} 次',
        preScrollComplete: '完成第 {attempt} 次预滚动',
        preScrollSectionMarked: '已标记第 {attempt} 次滚动加载的内容为已处理',
        preScrollFinished: '预滚动完成',
        foundNewSections: '找到 {count} 个新的视频项',
        noNewSections: '没有找到新的视频项，停止滚动',
        skippedSection: '跳过第 {index} 个项目：没有找到 play-icon，可能不是视频',
        processingVideo: '处理视频 {index}: {url}',
        reachedPageBottom: '已到达页面底部，停止滚动',
        scrolling: '已滚动 {attempts} 次，继续加载更多视频...',
        videoNoSource: '视频 {url} 没有可用的视频源，跳过下载',
        imageNoSource: '内容 {url} 没有可用的图片源，跳过下载',
        videoSavedToDatabase: '视频 {vid} 已成功下载并更新到数据库',
        videoDownloadFailed: '视频 {vid} 下载失败，未添加到数据库',
        checkFilesError: '检查文件或保存数据时出错: {error}',
        startingDownloader_2: '开始下载，从 {start} 到 {end}',
        downloaderProcessStarted: '下载器进程已启动，PID: {pid}',
        errorStartingDownloader: '启动下载器时出错: {error}',
        downloaderOutput: '下载器输出: {message}',
        downloaderError: '下载器错误: {error}',
        downloaderProcessExited: '下载器进程退出，退出码 {code}, 信号 {signal}',
        generalError: '发生错误: {error}',
        videoDownloadSkipped: '视频下载已跳过',
    },
    en: {
        startingBrowser: 'Starting browser...',
        browserInitialized: 'Browser initialized',
        databaseOpened: 'Database opened',
        loggingIn: 'Logging in to Xiaohongshu...',
        loginSuccessful: 'Login successful',
        gettingProfileUrl: 'Getting profile URL...',
        navigatingToProfile: 'Navigating to profile: {url}',
        profileUrlNotFound: 'Profile URL not found',
        personalInfoReplaced: 'Personal information replaced with asterisks',
        attemptingTabClick: 'Attempting to click "{tab}" tab (Attempt {attempt})',
        pageLoaded: 'Page loaded',
        tabsFound: 'Tabs found',
        tabFound: 'Found "{tab}" tab at position {index}',
        tabSwitched: 'Switched to "{tab}" tab',
        vidExtracted: 'Extracted video ID: {vid}',
        videoExists: 'Video {vid} already exists in the database',
        videoMp4NotFound: 'MP4 source not found for video {vid}',
        videoAddedToDatabase: 'Video {vid} added to database',
        processVideoPageError: 'Error processing video page: {error}',
        startingVideoDownload: 'Starting video download: {url}, save path: {savePath}',
        videoDownloadComplete: 'Video download complete, save path: {savePath}',
        videoDownloadError: 'Video download error: {error}',
        startingImageDownload: 'Starting image download: {url}, save path: {savePath}',
        imageDownloadComplete: 'Image download complete, save path: {savePath}',
        imageDownloadError: 'Image download error: {error}',
        startingDownloader: 'Starting downloader...',
        processingVideos: 'Processing {type} videos...',
        allContentProcessed: 'All content processed',
        waitingForUserInput: 'Waiting for user input to keep browser open...',
        loginTimeout: 'Login timeout',
        loginFailed: 'Login failed',
        downloaderError: 'Downloader error: {error}',
        closingBrowser: 'Closing browser...',
        downloaderFinished: 'Downloader finished',
        databaseCloseError: 'Error closing database connection: {error}',
        databaseConnectionClosed: 'Database connection closed',
        cookiesSaved: 'Cookies saved',
        cookiesLoaded: 'Cookies loaded',
        cookiesFileNotFound: 'Cookies file not found, will be created after first login',
        saveVideoDataError: 'Error saving video data to database: {error}',
        gettingVideos: 'Getting {type} videos...',
        startingPreScroll: 'Starting pre-scroll, {attempts} attempts',
        preScrollComplete: 'Completed pre-scroll attempt {attempt}',
        preScrollSectionMarked: 'Marked content from pre-scroll attempt {attempt} as processed',
        preScrollFinished: 'Pre-scroll finished',
        foundNewSections: 'Found {count} new video items',
        noNewSections: 'No new video items found, stopping scroll',
        skippedSection: 'Skipped item {index}: No play-icon found, might not be a video',
        processingVideo: 'Processing video {index}: {url}',
        reachedPageBottom: 'Reached page bottom, stopping scroll',
        scrolling: 'Scrolled {attempts} times, continuing to load more videos...',
        videoNoSource: 'Video {url} has no available video source, skipping download',
        imageNoSource: 'Content {url} has no available image source, skipping download',
        videoSavedToDatabase: 'Video {vid} successfully downloaded and updated in database',
        videoDownloadFailed: 'Video {vid} download failed, not added to database',
        checkFilesError: 'Error checking files or saving data: {error}',
        startingDownloader_2: 'Starting download, from {start} to {end}',
        downloaderProcessStarted: 'Downloader process started with PID: {pid}',
        errorStartingDownloader: 'Error starting downloader: {error}',
        downloaderOutput: 'Downloader output: {message}',
        downloaderError: 'Downloader error: {error}',
        downloaderProcessExited: 'Downloader process exited with code {code}, signal {signal}',
        generalError: 'An error occurred: {error}',
    }
};

export function getTranslation(lang, key, params = {}) {
    if (!translations[lang] || !translations[lang][key]) {
        console.warn(`Translation missing for language: ${lang}, key: ${key}`);
        return key;
    }
    let translation = translations[lang][key];
    translation = translation.replace(/\{(\w+)\}/g, (match, key) => {
        return params.hasOwnProperty(key) ? params[key] : match;
    });
    return translation;
}
